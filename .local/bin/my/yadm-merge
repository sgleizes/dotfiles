#!/usr/bin/env zsh
#
# This function is intended to be used from the 'desktop' branch to merge
# the changes committed on the master worktree. It behaves similarly to yadm-sync,
# stashing files which are tracked on the master branch and all staged files in the
# main worktree. The intent is to avoid checking out filtered version of desktop files.
# Usage: yadm-merge
#

repo="$(yadm rev-parse --git-dir)"
if [[ ! "$repo" ]]; then
  print -P ':: %F{red}ERROR%f: yadm repository does not exist'
  return 1
fi

master="$(yadm worktree list | grep master | awk '{print $1}')"
if [[ ! "$master" ]]; then
  print -P ':: %F{red}ERROR%f: master worktree does not exist'
  return 1
fi

files=( $(git -C $master ls-files -ci -X $repo/info/sparse-checkout) $(yadm diff --name-only --cached) )
yadm stash push -- ':/:'${^files} || return 1
yadm merge --no-edit master
yadm stash pop
